{"version":3,"sources":["components/people/Person.module.sass","components/containers/PeopleView.module.sass","components/people/PeopleList.module.sass","propTypes/propTypes.js","components/layout/MainLayout.jsx","api/swAPI.js","api/URIs.js","api/people/index.js","components/people/Person.jsx","components/comments/NewCommentForm.jsx","hooks/useInput.js","utils/index.js","components/people/PeopleList.jsx","components/containers/PeopleView.jsx","App.jsx","index.js","components/comments/NewCommentForm.module.sass"],"names":["module","exports","oneOfType","arrayOf","node","shape","name","string","isRequired","birth_year","CommonLayout","children","swAPI","axios","create","baseURL","process","headers","get","Accept","getPeople","a","URIs","data","Person","person","className","classes","container","header","comments","map","item","comment","id","defaultProps","MemodPerson","React","memo","NewCommentForm","addComment","initialValue","useState","value","setValue","reset","bind","onChange","event","target","useInput","onSubmit","preventDefault","form","textarea","rows","required","placeholder","button","type","generateSimpleID","window","URL","createObjectURL","Blob","substring","PeopleList","list","setList","useEffect","then","results","arrayOfObjects","Array","isArray","Error","addCommentsAndIdFields","newComment","result","length","card","PeopleView","App","MainLayout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b9a24ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Person_header__WD6kP\",\"container\":\"Person_container__4gKjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PeopleView_header__15TPD\",\"container\":\"PeopleView_container__3wby0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PeopleList_card__U5yKf\"};","import { arrayOf, node, oneOfType, shape, string } from 'prop-types'\n\nexport const children = oneOfType([\n\tarrayOf(node),\n\tnode\n])\n\nexport const person = shape({\n\tname: string.isRequired,\n\tbirth_year: string.isRequired\n})\n","import React from 'react'\nimport { children } from '../../propTypes'\n\nconst CommonLayout = ({ children }) => {\n\treturn <main>\n\t\t{children}\n\t</main>\n}\n\nCommonLayout.propTypes = {\n\tchildren\n}\n\nexport default CommonLayout\n","import axios from 'axios'\n\nconst defaults = {\n\tAccept: 'application/json',\n\t'Content-Type': 'application/json'\n}\n\nexport const swAPI = axios.create({\n\tbaseURL: process.env.REACT_APP_API_URL,\n\theaders: {\n\t\tget: defaults\n\t}\n})\n","export default {\n\tpeople: '/people/'\n}\n","import { swAPI } from '../swAPI'\nimport URIs from '../URIs'\n\nexport const getPeople = async () => {\n\tconst { data } = await swAPI.get(URIs.people)\n\treturn data\n}\n","import React from 'react'\nimport { person } from '../../propTypes'\n\nimport classes from './Person.module.sass'\n\nconst Person = ({ person }) => {\n\treturn <article className={classes.container}>\n\t\t<h2 className={classes.header}>{ person.name }</h2>\n\t\t<em>Birth year: { person.birth_year }</em>\n\t\t{person.comments.map(item =>\n\t\t\t<p key={item.id}>\n\t\t\t\t{ item.comment }\n\t\t\t</p>\n\t\t)}\n\t</article>\n}\n\nPerson.propTypes = {\n\tperson\n}\n\nPerson.defaultProps = {\n\tname: 'Name required',\n\tbirth_year: 'Year required',\n\tcomments: []\n}\n\nconst MemodPerson = React.memo(Person)\n\nexport default MemodPerson\n","import React from 'react'\nimport { func, string } from 'prop-types'\nimport { useInput } from '../../hooks/useInput'\n\nimport classes from './NewCommentForm.module.sass'\n\nconst NewCommentForm = ({ id, addComment }) => {\n\n\tconst { value, bind, reset } = useInput('')\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault()\n\t\taddComment(id, value)\n\t\treset()\n\t}\n\n\treturn <form onSubmit={handleSubmit} className={classes.form}>\n\t\t<label>\n\t\t\t<textarea\n\t\t\t\tclassName={classes.textarea}\n\t\t\t\trows=\"3\"\n\t\t\t\trequired\n\t\t\t\tplaceholder=\"Your comment..\"\n\t\t\t\t{...bind}\n\t\t\t/>\n\t\t</label>\n\t\t<input\n\t\t\tclassName={classes.button}\n\t\t\ttype=\"submit\"\n\t\t\tvalue=\"add\"\n\t\t/>\n\t</form>\n}\n\nNewCommentForm.propTypes= {\n\tid: string.isRequired,\n\taddComment: func.isRequired\n}\n\nexport default NewCommentForm\n","import { useState } from 'react'\n\nexport const useInput = initialValue => {\n\tconst [ value, setValue ] = useState(initialValue)\n\n\treturn {\n\t\tvalue,\n\t\tsetValue,\n\t\treset: () => setValue(''),\n\t\tbind: {\n\t\t\tvalue,\n\t\t\tonChange: event => {\n\t\t\t\tsetValue(event.target.value)\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * Add comments array to person objects\n * @param {Object[]} arrayOfObjects - Array of people\n * @param {Object} person - Person object\n *\n * @throws - Will throw an error if arg is missing or invalid\n *\n * @returns {Object[]} - Array person objects with empty comment arrays\n */\n\nexport const addCommentsAndIdFields = arrayOfObjects => {\n\tif (!arrayOfObjects || !Array.isArray(arrayOfObjects))\n\t\tthrow new Error('Can\\'t add checkboxes, array of employee objects is missing.')\n\n\tfor (let item of arrayOfObjects) {\n\t\titem.comments = [],\n\t\titem.id = generateSimpleID()\n\t}\n\treturn arrayOfObjects\n}\n\n/**\n * Generate simple id\n *\n * @returns {string} - ID\n */\n\nexport const generateSimpleID = () => window.URL.createObjectURL(new Blob([])).substring(31)\n","import React, { useEffect, useState } from 'react'\nimport { getPeople } from '../../api/people'\n\nimport Person from './Person'\nimport NewCommentForm from '../comments/NewCommentForm'\nimport { addCommentsAndIdFields, generateSimpleID } from '../../utils'\n\nimport classes from './PeopleList.module.sass'\n\nconst PeopleList = () => {\n\tconst [ list, setList ] = useState([])\n\n\tuseEffect(() => {\n\t\tgetPeople().then(({ results }) => {\n\t\t\tsetList(addCommentsAndIdFields(results))\n\t\t})\n\t}, [])\n\n\tconst addComment = (id, comment) => {\n\t\tconst newComment = {\n\t\t\tid: generateSimpleID(),\n\t\t\tcomment\n\t\t}\n\n\t\tconst result = list.map(person =>\n\t\t\tperson.id === id\n\t\t\t\t? { ...person, comments: [ ...person.comments, newComment ] }\n\t\t\t\t: person)\n\n\t\tsetList(() => [ ...result ] )\n\t}\n\n\tif (!list.length) return <>Just a sec...</>\n\n\treturn <>\n\t\t{list.map(person => (\n\t\t\t<section\n\t\t\t\tkey={person.id}\n\t\t\t\tclassName={classes.card}\n\t\t\t>\n\t\t\t\t<Person\n\t\t\t\t\tperson={person}\n\t\t\t\t/>\n\t\t\t\t<NewCommentForm\n\t\t\t\t\tid={person.id}\n\t\t\t\t\taddComment={addComment}\n\t\t\t\t/>\n\t\t\t</section>\n\t\t))}\n\t</>\n}\n\nexport default PeopleList\n","import React from 'react'\n\nimport PeopleList from '../people/PeopleList'\nimport classes from './PeopleView.module.sass'\n\nconst PeopleView = () => {\n\treturn <>\n\t\t<h1 className={classes.header}>List of people</h1>\n\t\t<section className={classes.container}>\n\t\t\t<PeopleList />\n\t\t</section>\n\t</>\n}\n\nexport default PeopleView\n","import React from 'react'\nimport MainLayout from './components/layout/MainLayout'\nimport PeopleView from './components/containers/PeopleView'\n\nconst App = () => {\n\treturn <MainLayout>\n\t\t<PeopleView />\n\t</MainLayout>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1UURA\",\"label\":\"NewCommentForm_label__3Jzyv\",\"textarea\":\"NewCommentForm_textarea__2XLw7\",\"button\":\"NewCommentForm_button__2nJqq\"};"],"sourceRoot":""}